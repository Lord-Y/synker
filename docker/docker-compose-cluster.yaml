version: '3'

services:
  cockroachc01:
    image: cockroachdb/cockroach:latest-v21.1
    container_name: cockroachc01
    volumes:
    - cockroachc01:/cockroach/cockroach-data
    networks:
    - synker_cluster
    restart: always
    command:
    - start
    - --insecure
    - --join=cockroachc01,cockroachc02,cockroachc03
  cockroachc02:
    image: cockroachdb/cockroach:latest-v21.1
    container_name: cockroachc02
    volumes:
    - cockroachc02:/cockroach/cockroach-data
    networks:
    - synker_cluster
    restart: always
    command:
    - start
    - --insecure
    - --join=cockroachc01,cockroachc02,cockroachc03
  cockroachc03:
    image: cockroachdb/cockroach:latest-v21.1
    container_name: cockroachc03
    volumes:
    - cockroachc03:/cockroach/cockroach-data
    networks:
    - synker_cluster
    restart: always
    command:
    - start
    - --insecure
    - --join=cockroachc01,cockroachc02,cockroachc03
  elasticsearchc01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc01
    environment:
    - node.name=elasticsearchc01
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc02,elasticsearchc03
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc01:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  elasticsearchc02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc02
    environment:
    - node.name=elasticsearchc02
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc01,elasticsearchc03
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc02:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  elasticsearchc03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc03
    environment:
    - node.name=elasticsearchc03
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc01,elasticsearchc02
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc03:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  haproxy:
    image: haproxy:2.4-bullseye
    container_name: haproxy
    depends_on:
    - cockroachc01
    - cockroachc02
    - cockroachc03
    - elasticsearchc01
    - elasticsearchc02
    - elasticsearchc03
    - etcdc01
    - etcdc02
    - etcdc03
    ports:
    - 1936:1936
    - 9200:9200
    - 26257:26257
    - 8080:8080
    - 2379:2379
    volumes:
    - ./haproxy_cluster.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
    - synker_cluster
  cockroach_cluster_init:
    image: cockroachdb/cockroach:latest-v21.1
    container_name: cockroach_cluster_init
    environment:
    - COCKROACH_HOST=cockroachc01:26257
    entrypoint: 
    - bash
    - -c
    - /usr/local/bin/cockroach_init.sh
    depends_on:
    - haproxy
    volumes:
    - ./cockroach_init.sh:/usr/local/bin/cockroach_init.sh:ro
    networks:
    - synker_cluster
  etcdc01:
    image: quay.io/coreos/etcd:v3.5.1
    container_name: etcdc01
    environment:
    - NODE_NAME=etcdc01
    - NODE_NAME1=etcdc01
    - NODE_NAME2=etcdc02
    - NODE_NAME3=etcdc03
    - DATA_DIR=/etcd/data
    - INITIAL_CLUSTER_TOKEN=synker
    - INITIAL_CLUSTER_STATE=new
    volumes:
    - etcdc01:/etcd/data
    - ./etcd.sh:/usr/local/bin/etcd.sh:ro
    networks:
    - synker_cluster
    restart: always
    entrypoint: 
    - bash
    - -c
    - /usr/local/bin/etcd.sh
  etcdc02:
    image: quay.io/coreos/etcd:v3.5.1
    container_name: etcdc02
    environment:
    - NODE_NAME=etcdc02
    - NODE_NAME1=etcdc01
    - NODE_NAME2=etcdc02
    - NODE_NAME3=etcdc03
    - DATA_DIR=/etcd/data
    - INITIAL_CLUSTER_TOKEN=synker
    - INITIAL_CLUSTER_STATE=new
    volumes:
    - etcdc02:/etcd/data
    - ./etcd.sh:/usr/local/bin/etcd.sh:ro
    networks:
    - synker_cluster
    restart: always
    entrypoint: 
    - bash
    - -c
    - /usr/local/bin/etcd.sh
  etcdc03:
    image: quay.io/coreos/etcd:v3.5.1
    container_name: etcdc03
    environment:
    - NODE_NAME=etcdc03
    - NODE_NAME1=etcdc01
    - NODE_NAME2=etcdc02
    - NODE_NAME3=etcdc03
    - DATA_DIR=/etcd/data
    - INITIAL_CLUSTER_TOKEN=synker
    - INITIAL_CLUSTER_STATE=new
    volumes:
    - etcdc03:/etcd/data
    - ./etcd.sh:/usr/local/bin/etcd.sh:ro
    networks:
    - synker_cluster
    restart: always
    entrypoint: 
    - bash
    - -c
    - /usr/local/bin/etcd.sh
  etcd_cluster_role_setup:
    image: quay.io/coreos/etcd:v3.5.1
    container_name: etcd_cluster_role_setup
    environment:
    - USER_ROOT_PASSWORD=root
    - USER_SYNKER_PASSWORD=synker
    entrypoint: 
    - bash
    - -c
    - /usr/local/bin/etcd_auth.sh
    depends_on:
    - haproxy
    volumes:
    - ./etcd_auth.sh:/usr/local/bin/etcd_auth.sh:ro
    networks:
    - synker_cluster

networks:
  synker_cluster:

volumes:
  cockroachc01:
  cockroachc02:
  cockroachc03:
  elasticsearchc01:
  elasticsearchc02:
  elasticsearchc03:
  etcdc01:
  etcdc02:
  etcdc03:
