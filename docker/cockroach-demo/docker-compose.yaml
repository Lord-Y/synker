version: '3'

services:
  elasticsearchc01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc01
    environment:
    - node.name=elasticsearchc01
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc02,elasticsearchc03
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc01:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  elasticsearchc02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc02
    environment:
    - node.name=elasticsearchc02
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc01,elasticsearchc03
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc02:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  elasticsearchc03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearchc03
    environment:
    - node.name=elasticsearchc03
    - cluster.name=synker
    - discovery.seed_hosts=elasticsearchc01,elasticsearchc02
    - cluster.initial_master_nodes=elasticsearchc01,elasticsearchc02,elasticsearchc03
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
    - http.cors.enabled=true
    - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
    - ALL
    # privileged: true
    volumes:
    - /var/log
    - elasticsearchc03:/usr/share/elasticsearch/data
    networks:
    - synker_cluster
    restart: always
  redpandac01:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.1
    container_name: redpandac01
    hostname: redpandac01
    volumes:
    - redpandac01:/var/lib/redpanda/data
    networks:
    - synker_cluster
    restart: always
    ports:
    - 18081:18081
    - 18082:18082
    - 19092:19092
    - 19644:9644
    command:
    - redpanda
    - start
    - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
    # Address the broker advertises to clients that connect to the Kafka API.
    # Use the internal addresses to connect to the Redpanda brokers'
    # from inside the same Docker network.
    # Use the external addresses to connect to the Redpanda brokers'
    # from outside the Docker network.
    - --advertise-kafka-addr internal://redpandac01:9092,external://localhost:19092
    - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
    # Address the broker advertises to clients that connect to the HTTP Proxy.
    - --advertise-pandaproxy-addr internal://redpandac01:8082,external://localhost:18082
    - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
    # Redpanda brokers use the RPC API to communicate with each other internally.
    - --rpc-addr redpandac01:33145
    - --advertise-rpc-addr redpandac01:33145
    # Mode dev-container uses well-known configuration properties for development in containers.
    - --mode dev-container
    # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
    - --smp 1
    - --default-log-level=info
  redpandac02:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.1
    container_name: redpandac02
    hostname: redpandac02
    volumes:
    - redpandac02:/var/lib/redpanda/data
    networks:
    - synker_cluster
    restart: always
    ports:
    - 28081:28081
    - 28082:28082
    - 29092:29092
    - 29644:9644
    command:
    - redpanda
    - start
    - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
    - --advertise-kafka-addr internal://redpandac02:9092,external://localhost:29092
    - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
    - --advertise-pandaproxy-addr internal://redpandac02:8082,external://localhost:28082
    - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:28081
    - --rpc-addr redpandac02:33145
    - --advertise-rpc-addr redpandac02:33145
    - --mode dev-container
    - --smp 1
    - --default-log-level=info
    - --seeds redpandac01:33145
    depends_on:
    - redpandac01
  redpandac03:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.1
    container_name: redpandac03
    hostname: redpandac03
    volumes:
    - redpandac03:/var/lib/redpanda/data
    networks:
    - synker_cluster
    restart: always
    ports:
    - 38081:38081
    - 38082:38082
    - 39092:39092
    - 39644:9644
    command:
    - redpanda
    - start
    - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:39092
    - --advertise-kafka-addr internal://redpandac03:9092,external://localhost:39092
    - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:38082
    - --advertise-pandaproxy-addr internal://redpandac03:8082,external://localhost:38082
    - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:38081
    - --rpc-addr redpandac03:33145
    - --advertise-rpc-addr redpandac03:33145
    - --mode dev-container
    - --smp 1
    - --default-log-level=info
    - --seeds redpandac01:33145
    depends_on:
    - redpandac01
  haproxy:
    image: haproxy:2.4-bullseye
    container_name: haproxy
    depends_on:
    - elasticsearchc01
    - elasticsearchc02
    - elasticsearchc03
    ports:
    - 1936:1936   # haproxy stats
    - 9200:9200   # elasticsearch cluster
    #- 8082:8082   # redpanda proxy
    #- 9092:9092   # redpanda kafka
    volumes:
    - ./haproxy_cluster.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
    - synker_cluster

networks:
  synker_cluster:
    driver: bridge

volumes:
  elasticsearchc01:
  elasticsearchc02:
  elasticsearchc03:
  redpandac01:
  redpandac02:
  redpandac03:
  cockroachc01:
  cockroachc02:
  cockroachc03:
